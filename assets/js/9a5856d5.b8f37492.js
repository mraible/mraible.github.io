"use strict";(self.webpackChunkjhipster_website=self.webpackChunkjhipster_website||[]).push([[3266],{41218:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>o});var t=s(74848),i=s(28453);const l={title:"JHipster Domain Language (JDL) - Enums",slug:"/jdl/enums",last_update:{date:new Date("2019-10-27T12:00:00.000Z")}},a=void 0,r={id:"jdl/enums",title:"JHipster Domain Language (JDL) - Enums",description:"Syntax",source:"@site/docs/jdl/enums.mdx",sourceDirName:"jdl",slug:"/jdl/enums",permalink:"/jdl/enums",draft:!1,unlisted:!1,editUrl:"https://github.com/jhipster/jhipster.github.io/tree/main/docs/jdl/enums.mdx",tags:[],version:"current",lastUpdatedAt:15721776e5,frontMatter:{title:"JHipster Domain Language (JDL) - Enums",slug:"/jdl/enums",last_update:{date:"2019-10-27T12:00:00.000Z"}},sidebar:"docsSidebar",previous:{title:"Entities & fields",permalink:"/jdl/entities-fields"},next:{title:"Relationships",permalink:"/jdl/relationships"}},d={},o=[{value:"Syntax",id:"syntax",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic example",id:"basic-example",level:3},{value:"With values",id:"with-values",level:3},{value:"Commenting",id:"commenting",level:3}];function c(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(n.p,{children:"Enumeration declaration is done as follows:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jdl",children:"enum <enum name> {\n  <ENUM KEY> [(<enum value>)]\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Enumeration entry values are mandatory","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"And uppercase keys must be used"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Enumeration entry values are optional, and must be wrapped inside parenthesises"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.h3,{id:"basic-example",children:"Basic example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jdl",children:"enum Country {\n  BELGIUM,\n  FRANCE,\n  ITALY\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"And its use:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jdl",children:"enum Country {}\n\nentity A {\n  country Country\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"with-values",children:"With values"}),"\n",(0,t.jsx)(n.p,{children:"Starting from JHipster Core v6, enum values can have explicit values:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jdl",children:'enum Country {\n  BELGIUM (Belgium),\n  FRANCE (France),\n  ITALY (Italy),\n  CHINA ("\u4e2d\u56fd")\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"commenting",children:"Commenting"}),"\n",(0,t.jsx)(n.p,{children:"Just like relationships, entities and fields, commenting is possible for enums, with the same rules."}),"\n",(0,t.jsx)(n.p,{children:"Comments will later be added as Javadoc comments by JHipster. The JDL possesses its own kind of comment:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"// an ignored comment"}),"\n",(0,t.jsx)(n.li,{children:"/** not an ignored comment */"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Therefore, anything that starts with ",(0,t.jsx)(n.code,{children:"//"})," is considered an internal comment for JDL, and will not be counted as Javadoc.\nPlease note that the JDL Studio directives that start with ",(0,t.jsx)(n.code,{children:"#"})," will be ignored during parsing."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jdl",children:"/** This comment will be taken into account */\nenum Country {\n  // But not this one!\n  FRANCE\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var t=s(96540);const i={},l=t.createContext(i);function a(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);