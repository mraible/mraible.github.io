"use strict";(self.webpackChunkjhipster_website=self.webpackChunkjhipster_website||[]).push([[9078],{44958:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>o});var s=i(74848),t=i(28453);const l={title:"JHipster Domain Language (JDL) - Options",slug:"/jdl/options",last_update:{date:new Date("2019-11-02T12:00:00.000Z")}},r=void 0,a={id:"jdl/options",title:"JHipster Domain Language (JDL) - Options",description:"In JHipster, you can specify options for your entities such as pagination or DTO.",source:"@site/docs/jdl/options.mdx",sourceDirName:"jdl",slug:"/jdl/options",permalink:"/jdl/options",draft:!1,unlisted:!1,editUrl:"https://github.com/jhipster/jhipster.github.io/tree/main/docs/jdl/options.mdx",tags:[],version:"current",lastUpdatedAt:1572696e6,frontMatter:{title:"JHipster Domain Language (JDL) - Options",slug:"/jdl/options",last_update:{date:"2019-11-02T12:00:00.000Z"}},sidebar:"docsSidebar",previous:{title:"Relationships",permalink:"/jdl/relationships"},next:{title:"Deployments",permalink:"/jdl/deployments"}},d={},o=[{value:"How to",id:"how-to",level:2},{value:"Syntax",id:"syntax",level:2},{value:"The use XYZ options",id:"the-use-xyz-options",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic unary example",id:"basic-unary-example",level:3},{value:"Basic binary example",id:"basic-binary-example",level:3},{value:"all, * example",id:"all--example",level:3},{value:"all, * example with exclusions (unary)",id:"all--example-with-exclusions-unary",level:3},{value:"all, * example with exclusions (binary)",id:"all--example-with-exclusions-binary",level:3},{value:"Option with custom values",id:"option-with-custom-values",level:3},{value:"Mixed example",id:"mixed-example",level:3},{value:"About services",id:"about-services",level:2},{value:"Microservice-related options",id:"microservice-related-options",level:2},{value:"Custom annotations",id:"custom-annotations",level:2},{value:"Available options",id:"available-options",level:2},{value:"Entity options",id:"entity-options",level:3},{value:"Field options",id:"field-options",level:3},{value:"See also",id:"see-also",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"In JHipster, you can specify options for your entities such as pagination or DTO.\nYou can do the same with the JDL, either with annotations on the entity, or with the following syntax:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"entity A {\n  name String required\n}\nentity B\nentity C\n\ndto A, B with mapstruct\n\npaginate A with infinite-scroll\npaginate B with pagination\npaginate C with pager  // pager is only available in AngularJS\n\nservice A with serviceClass\nservice C with serviceImpl\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The complete list of available options is ",(0,s.jsx)(n.a,{href:"#available-options",children:"here"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"how-to",children:"How to"}),"\n",(0,s.jsx)(n.p,{children:"There are two kinds of options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"unary (without option value)"}),"\n",(0,s.jsx)(n.li,{children:"binary (with value)"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"There are three ways to apply options to entities:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["using the option name (",(0,s.jsx)(n.code,{children:"dto"}),", ",(0,s.jsx)(n.code,{children:"readOnly"}),", etc.), see examples"]}),"\n",(0,s.jsx)(n.li,{children:"using annotations"}),"\n",(0,s.jsxs)(n.li,{children:["use the ",(0,s.jsx)(n.code,{children:"use XYZ"})," form"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Mixing them is not recommended as it reduces readability."}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.p,{children:"For the regular form:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"<option name> <option entity list>\n\nor\n\n<option name> <option entity list> with <option value>\n\nor\n\n<option name> <option entity list> with <option value> except <option excluded entity list>\n\nor \n\n<option name> <option entity list> except <option excluded entity list>\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["For unary options:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"the option name and the list is needed"}),"\n",(0,s.jsxs)(n.li,{children:["the excluded entities are optional with the ",(0,s.jsx)(n.code,{children:"except"})," keyword (see below for more details)"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["For binary options:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["the entity list precedes the ",(0,s.jsx)(n.code,{children:"with"})," keyword and the option value"]}),"\n",(0,s.jsxs)(n.li,{children:["again, the excluded entities are in the end with the ",(0,s.jsx)(n.code,{children:"except"})," keyword"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"For annotations:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"@<option name>\nentity <entity name>\n\nor\n\n@<option name>(<option value>)\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Similar to Java, annotations may take values in parentheses","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"depending on the option, values may or may not be optional"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"the-use-xyz-options",children:"The use XYZ options"}),"\n",(0,s.jsx)(n.p,{children:"With the use-option form, you can specify some options on your entities.\nIt was created during JHipster Code 2020, and the reasons behind its creation are to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Solve the option-disabling issue (there are more than one way to say 'no' in JHipster: ",(0,s.jsx)(n.code,{children:"no, false, none"}),")"]}),"\n",(0,s.jsx)(n.li,{children:"Propose a way to group options by entities"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"entity A\nentity B\nentity C\n\nuse serviceClass for * except C\nuse mapstruct, serviceImpl, infinite-scroll for A, B\nuse pagination for C\n"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Use option value"}),(0,s.jsx)(n.th,{children:"Comment"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"mapstruct"}),(0,s.jsx)(n.td,{children:"Whether to create DTOs for your entities, if an entity has a DTO but no service, then 'serviceClass will be used'"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"serviceClass"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"serviceImpl"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"pagination"}),(0,s.jsx)(n.td,{children:"Pagination as an option is forbidden when the application uses Cassandra"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"infinite-scroll"}),(0,s.jsx)(n.td,{children:"Pagination as an option is forbidden when the application uses Cassandra"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"elasticsearch"}),(0,s.jsx)(n.td,{children:"Requires the application to have the searchEngine option enabled"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"couchbase"}),(0,s.jsx)(n.td,{children:"Requires the application to have the searchEngine option enabled"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.p,{children:"Each example will have three forms:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"the regular one"}),"\n",(0,s.jsx)(n.li,{children:"the annotation-based one"}),"\n",(0,s.jsx)(n.li,{children:"the use form (when applicable)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"basic-unary-example",children:"Basic unary example"}),"\n",(0,s.jsx)(n.p,{children:"Regular:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"entity A\n\nreadOnly A\n"})}),"\n",(0,s.jsx)(n.p,{children:"Annotation-based:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"@readOnly\nentity A\n"})}),"\n",(0,s.jsx)(n.h3,{id:"basic-binary-example",children:"Basic binary example"}),"\n",(0,s.jsx)(n.p,{children:"Regular:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"entity A\n\ndto A with mapstruct\n"})}),"\n",(0,s.jsx)(n.p,{children:"Annotation-based:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"@dto(mapstruct)\nentity A\n"})}),"\n",(0,s.jsxs)(n.p,{children:["With the ",(0,s.jsx)(n.code,{children:"use"})," keyword:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"entity A\n\nuse mapstruct, serviceImpl, pagination for A\n"})}),"\n",(0,s.jsx)(n.h3,{id:"all--example",children:"all, * example"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"all"})," and ",(0,s.jsx)(n.code,{children:"*"})," are aliases."]}),"\n",(0,s.jsx)(n.p,{children:"Regular:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"entity A\nentity B\n\ndto all with mapstruct\n"})}),"\n",(0,s.jsx)(n.p,{children:"Annotation-based:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"@dto(mapstruct)\nentity A\n\n@dto(mapstruct)\nentity B\n"})}),"\n",(0,s.jsxs)(n.p,{children:["With the ",(0,s.jsx)(n.code,{children:"use"})," keyword:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"entity A\nentity B\n\nuse mapstruct, serviceImpl, pagination for *\n"})}),"\n",(0,s.jsx)(n.h3,{id:"all--example-with-exclusions-unary",children:"all, * example with exclusions (unary)"}),"\n",(0,s.jsx)(n.p,{children:"Regular:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"entity A\nentity B\n\nskipClient * except A\n"})}),"\n",(0,s.jsx)(n.p,{children:"Annotation-based:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"entity A\n\n@skipClient\nentity B\n"})}),"\n",(0,s.jsxs)(n.p,{children:["With the ",(0,s.jsx)(n.code,{children:"use"})," keyword:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"entity A\nentity B\n\nuse mapstruct, serviceImpl, pagination for * except A\n"})}),"\n",(0,s.jsx)(n.h3,{id:"all--example-with-exclusions-binary",children:"all, * example with exclusions (binary)"}),"\n",(0,s.jsx)(n.p,{children:"Regular:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"entity A\nentity B\n\ndto all with mapstruct except A\n"})}),"\n",(0,s.jsx)(n.p,{children:"Annotation-based:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"entity A\n\n@dto(mapstruct)\nentity B\n"})}),"\n",(0,s.jsxs)(n.p,{children:["With the ",(0,s.jsx)(n.code,{children:"use"})," keyword:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"entity A\nentity B\n\nuse mapstruct, serviceImpl, pagination for all except A\n"})}),"\n",(0,s.jsx)(n.h3,{id:"option-with-custom-values",children:"Option with custom values"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"entity A\nentity B\n\nmicroservice all with mySuperMS\n"})}),"\n",(0,s.jsx)(n.h3,{id:"mixed-example",children:"Mixed example"}),"\n",(0,s.jsx)(n.p,{children:"Regular:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"entity A\nentity B\nentity C\n\nreadOnly B, C\ndto * with mapstruct except C\nservice * with serviceClass except C\nsearch A with elasticsearch\n"})}),"\n",(0,s.jsx)(n.p,{children:"Annotation-based:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"@dto(mapstruct)\n@search(elastisearch)\n@service(serviceClass)\nentity A\n\n@readOnly\n@dto(mapstruct)\n@service(serviceClass)\nentity B\n\n@readOnly\nentity C\n"})}),"\n",(0,s.jsx)(n.h2,{id:"about-services",children:"About services"}),"\n",(0,s.jsx)(n.p,{children:"No services specified will create a resource class which will call the repository interface directly. This is the\ndefault and simplest option, see A."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"service with serviceClass"})," (see B) will make the resource call the service class which will call the repository interface.\n",(0,s.jsx)(n.code,{children:"service with serviceImpl"})," (see C) will make a service interface which will be used by the resource class."]}),"\n",(0,s.jsx)(n.p,{children:"The interface is implemented by a concrete class which will call the repository interface."}),"\n",(0,s.jsx)(n.p,{children:"Using no service unless sure is the simplest option and good for CRUD. Use service with a Class if you will have a lot\nof business logic which will use multiple repositories making it ideal for a service class. JHipsters are not fan of\nunnecessary Interfaces but if you like them go for service with impl."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"entity A\nentity B\nentity C\n\n// no service for A\nservice B with serviceClass\nservice C with serviceImpl\n"})}),"\n",(0,s.jsx)(n.h2,{id:"microservice-related-options",children:"Microservice-related options"}),"\n",(0,s.jsx)(n.p,{children:"As of JHipster v3, microservices can be created. You can specify some options to generate your entities in the JDL:\nthe microservice's name and the search engine."}),"\n",(0,s.jsx)(n.p,{children:"Here is how you can specify your microservice's name (the JHipster app's name):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"entity A\nentity B\nentity C\nmicroservice * with mysuperjhipsterapp except C\nmicroservice C with myotherjhipsterapp\nsearch * with elasticsearch except C\n"})}),"\n",(0,s.jsx)(n.p,{children:"The first option is used to tell JHipster that you want your microservice to deal with your entities, whereas the second\nspecifies how and if you want your entities searched."}),"\n",(0,s.jsx)(n.h2,{id:"custom-annotations",children:"Custom annotations"}),"\n",(0,s.jsx)(n.p,{children:"Custom annotations are possible in the JDL, for instance:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jdl",children:"@customAnnotation(customValue)\nentity A\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The main use case for this is for blueprints: sometimes, you need have custom options for entities, or even fields.\nFor regular options (",(0,s.jsx)(n.code,{children:"dto"}),", ",(0,s.jsx)(n.code,{children:"pagination"}),", etc.), these options will be generated in the JSON like in the CLI.\nHowever, for custom options, they will be generated under and ",(0,s.jsx)(n.code,{children:"options"})," key in the dumped JSON."]}),"\n",(0,s.jsx)(n.h2,{id:"available-options",children:"Available options"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:["Not what you're looking for? Check the ",(0,s.jsx)(n.a,{href:"/jdl/applications#available-application-configuration-options",children:"application options"}),"."]})}),"\n",(0,s.jsx)(n.h3,{id:"entity-options",children:"Entity options"}),"\n",(0,s.jsx)(n.p,{children:"Here are the entity options supported in the JDL:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"JDL option name (entity)"}),(0,s.jsx)(n.th,{children:"Option type"}),(0,s.jsx)(n.th,{children:"Default value"}),(0,s.jsx)(n.th,{children:"Possible values"}),(0,s.jsx)(n.th,{children:"Comment"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"skipClient"}),(0,s.jsx)(n.td,{children:"unary"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"This will make the client code generation to be skipped"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"skipServer"}),(0,s.jsx)(n.td,{children:"unary"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"This will make the server code generation to be skipped"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"noFluentMethod"}),(0,s.jsx)(n.td,{children:"unary"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsxs)(n.td,{children:["See ",(0,s.jsx)(n.a,{href:"/2016/08/17/jhipster-release-3.6.0#important-change-fluent-setters",children:"this note"})," for more information"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"filter"}),(0,s.jsx)(n.td,{children:"unary"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsxs)(n.td,{children:["See ",(0,s.jsx)(n.a,{href:"/entities-filtering",children:"filtering"})," for more details; if an entity is filtered but doesn't have a service then 'serviceClass' will be used"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"readOnly"}),(0,s.jsx)(n.td,{children:"unary"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsxs)(n.td,{children:["Adding this option will make an entity readOnly, see ",(0,s.jsx)(n.a,{href:"/2019/10/10/jhipster-release-6.4.0/",children:"this release note"})," for more details"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"dto"}),(0,s.jsx)(n.td,{children:"binary"}),(0,s.jsx)(n.td,{children:"no"}),(0,s.jsx)(n.td,{children:"mapstruct, no"}),(0,s.jsx)(n.td,{children:"Whether to create DTOs for your entities, if an entity has a DTO but no service, then 'serviceClass will be used'"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"service"}),(0,s.jsx)(n.td,{children:"binary"}),(0,s.jsx)(n.td,{children:"no"}),(0,s.jsx)(n.td,{children:"serviceClass, serviceImpl, no"}),(0,s.jsx)(n.td,{children:"-"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"paginate"}),(0,s.jsx)(n.td,{children:"binary"}),(0,s.jsx)(n.td,{children:"no"}),(0,s.jsx)(n.td,{children:"pagination, infinite-scroll, no"}),(0,s.jsx)(n.td,{children:"Pagination is forbidden when the application uses Cassandra"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"search"}),(0,s.jsx)(n.td,{children:"binary"}),(0,s.jsx)(n.td,{children:"no"}),(0,s.jsx)(n.td,{children:"elasticsearch, no"}),(0,s.jsx)(n.td,{children:"Requires the application to have the searchEngine option enabled"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"microservice"}),(0,s.jsx)(n.td,{children:"binary"}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"custom value"}),(0,s.jsx)(n.td,{children:"Will be automatically added for every entity declared inside a microservice application"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"angularSuffix"}),(0,s.jsx)(n.td,{children:"binary"}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"custom value"}),(0,s.jsx)(n.td,{children:"-"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"clientRootFolder"}),(0,s.jsx)(n.td,{children:"binary"}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"custom value"}),(0,s.jsx)(n.td,{children:"-"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"field-options",children:"Field options"}),"\n",(0,s.jsx)(n.p,{children:"Here are the field options supported in the JDL:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"JDL option name (field)"}),(0,s.jsx)(n.th,{children:"Default value"}),(0,s.jsx)(n.th,{children:"Possible values"}),(0,s.jsx)(n.th,{children:"Comment"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"defaultValue"}),(0,s.jsx)(n.td,{children:"undefined"}),(0,s.jsx)(n.td,{children:'any value fitting to the datatype of the field, e.g. "myDefaultValue" or 42 or true'}),(0,s.jsx)(n.td,{children:"Will define a fixed default value on database schema side on the column, as well as adjust the clients passing in the option as default from input forms (only Angular for now)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"defaultValueComputed"}),(0,s.jsx)(n.td,{children:"undefined"}),(0,s.jsx)(n.td,{children:'database functions to generate default values for a column, e.g. "NOW(6)"'}),(0,s.jsx)(n.td,{children:"This will generate a default value on database level using the given function"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(n.p,{children:["The application options are available ",(0,s.jsx)(n.a,{href:"/jdl/applications",children:"here"})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var s=i(96540);const t={},l=s.createContext(t);function r(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);