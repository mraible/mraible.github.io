"use strict";(self.webpackChunkjhipster_website=self.webpackChunkjhipster_website||[]).push([[1257],{6778:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var i=n(74848),o=n(28453);const a={title:"Increase integration test performance by lazy bean initialization",slug:"/tips/027_tip_lazy_init_test_beans.html",last_update:{date:new Date("2019-10-01T18:20:00.000Z")}},r=void 0,s={id:"tips/tip_lazy_init_test_beans",title:"Increase integration test performance by lazy bean initialization",description:"Tip submitted by @atomfrede",source:"@site/docs/tips/027_tip_lazy_init_test_beans.mdx",sourceDirName:"tips",slug:"/tips/027_tip_lazy_init_test_beans.html",permalink:"/tips/027_tip_lazy_init_test_beans.html",draft:!1,unlisted:!1,editUrl:"https://github.com/jhipster/jhipster.github.io/tree/main/docs/tips/027_tip_lazy_init_test_beans.mdx",tags:[],version:"current",lastUpdatedAt:1569954e6,sidebarPosition:27,frontMatter:{title:"Increase integration test performance by lazy bean initialization",slug:"/tips/027_tip_lazy_init_test_beans.html",last_update:{date:"2019-10-01T18:20:00.000Z"}},sidebar:"docsSidebar",previous:{title:"Issue of @OneToOne with @MapsId and how to avoid it",permalink:"/tips/026_tip_issue_of_onetoone_with_mapsid_how_to_avoid_it.html"},next:{title:"How to connect PGAdmin (PostgreSQL) to Heroku",permalink:"/tips/028_tip_pgadmin_heroku.html"}},c={},l=[];function p(t){const e={a:"a",code:"code",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:(0,i.jsxs)(e.strong,{children:["Tip submitted by ",(0,i.jsx)(e.a,{href:"https://github.com/atomfrede",children:"@atomfrede"})]})}),"\n",(0,i.jsx)(e.p,{children:"In many spring integration tests you don't need all beans, therefore initialization\nof all beans in the context for e.g. a repository test is not required and consumes precious time."}),"\n",(0,i.jsxs)(e.p,{children:["You can configure your tests to initialize beans lazy, such that only required beans are create by creating\na class ",(0,i.jsx)(e.code,{children:"TestLazyBeanInitConfiguration"})," in ",(0,i.jsx)(e.code,{children:"src/test/java/YOUR-PACKAGE/config"})," with the following content:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'import org.springframework.beans.BeansException;\nimport org.springframework.beans.factory.config.BeanFactoryPostProcessor;\nimport org.springframework.beans.factory.config.ConfigurableListableBeanFactory;\nimport org.springframework.context.annotation.Profile;\nimport org.springframework.stereotype.Component;\n\nimport java.util.Arrays;\n\n@Component\n@Profile("!" + TestLazyBeanInitConfiguration.EAGER_BEAN_INIT)\npublic class TestLazyBeanInitConfiguration implements BeanFactoryPostProcessor {\n    public static final String EAGER_BEAN_INIT = "eager-bean-init";\n\n    @Override\n    public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException {\n        Arrays.stream(beanFactory.getBeanDefinitionNames())\n            .map(beanFactory::getBeanDefinition)\n            .forEach(beanDefinition -> beanDefinition.setLazyInit(true));\n    }\n}\n'})}),"\n",(0,i.jsxs)(e.p,{children:["If you want/need a test to initialize all beans eagerly you need to annotate this test with ",(0,i.jsx)(e.code,{children:"@ActiveProfiles(TestLazyBeanInitConfiguration.EAGER_BEAN_INIT)"}),"."]}),"\n",(0,i.jsxs)(e.p,{children:["For reference look at ",(0,i.jsx)(e.a,{href:"https://spring.io/blog/2019/03/14/lazy-initialization-in-spring-boot-2-2",children:"spring boot blog"})," and the\n",(0,i.jsx)(e.a,{href:"https://github.com/jhipster/generator-jhipster/pull/10241",children:"related pull request"}),"."]}),"\n",(0,i.jsxs)(e.p,{children:["Thanks to ",(0,i.jsx)(e.a,{href:"https://github.com/rabiori",children:"@rabiori"})," for the implementation."]})]})}function d(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(p,{...t})}):p(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>s});var i=n(96540);const o={},a=i.createContext(o);function r(t){const e=i.useContext(a);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:r(t.components),i.createElement(a.Provider,{value:e},t.children)}}}]);