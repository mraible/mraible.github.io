"use strict";(self.webpackChunkjhipster_website=self.webpackChunkjhipster_website||[]).push([[8958],{48003:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var s=i(74848),n=i(28453);const r={title:"Using WebSockets",slug:"/using-websockets/",last_update:{date:new Date("2015-08-31T18:40:00.000Z")}},o=void 0,a={id:"options/using-websockets",title:"Using WebSockets",description:"WebSockets are useful for having a very dynamic application, where data is shared in near real-time between the server and its clients.",source:"@site/docs/options/using-websockets.mdx",sourceDirName:"options",slug:"/using-websockets/",permalink:"/using-websockets/",draft:!1,unlisted:!1,editUrl:"https://github.com/jhipster/jhipster.github.io/tree/main/docs/options/using-websockets.mdx",tags:[],version:"current",lastUpdatedAt:14410464e5,frontMatter:{title:"Using WebSockets",slug:"/using-websockets/",last_update:{date:"2015-08-31T18:40:00.000Z"}},sidebar:"docsSidebar",previous:{title:"Using Elasticsearch",permalink:"/using-elasticsearch/"},next:{title:"Doing API-First development",permalink:"/doing-api-first-development/"}},c={},l=[{value:"The &quot;Tracker&quot; example",id:"the-tracker-example",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"WebSockets are useful for having a very dynamic application, where data is shared in near real-time between the server and its clients."}),"\n",(0,s.jsxs)(t.p,{children:["JHipster currently uses Spring WebSockets as its implementation, so you will find a lot more information on this feature on the ",(0,s.jsx)(t.a,{href:"http://docs.spring.io/spring/docs/current/spring-framework-reference/html/websocket.html",children:"Spring WebSockets website"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"This option has a few limitations:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["By default, we use the dispatcher provided by Spring Websockets, which is an in-memory implementation. It will not scale if you want to use several servers. If you want to do so, have a look at the ",(0,s.jsx)(t.a,{href:"http://docs.spring.io/spring/docs/current/spring-framework-reference/html/websocket.html",children:"Spring WebSockets documentation"})," which explains how to configure an external broker."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"the-tracker-example",children:'The "Tracker" example'}),"\n",(0,s.jsxs)(t.p,{children:['JHipster provides a "tracker" example out-of-the-box. Located in the ',(0,s.jsx)(t.code,{children:"admin"})," menu, it will track the other users' behavior: you will see their login and IP, and which page they are currently viewing."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:'This is provided as an example so you can get started using WebSockets, not as a "production-ready" user tracker, but it works quite well.'}),"\n",(0,s.jsx)(t.li,{children:"It will show you how to integrate WebSockets with Spring Security, which is quite a complex topic"}),"\n",(0,s.jsx)(t.li,{children:"This works because JHipster is a Single-Page Web Application, so the WebSockets connections are not reinitialized between each page: this is where you get one of the big benefits of JHipster's architecture"}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>a});var s=i(96540);const n={},r=s.createContext(n);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);