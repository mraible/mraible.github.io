"use strict";(self.webpackChunkjhipster_website=self.webpackChunkjhipster_website||[]).push([[8726],{99905:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>a,frontMatter:()=>d,metadata:()=>c,toc:()=>o});var s=r(74848),n=r(28453);const d={title:"Common ports",slug:"/common-ports/",last_update:{date:new Date("2021-03-08T12:00:00.000Z")}},i=void 0,c={id:"development/common-ports",title:"Common ports",description:"JHipster configures many tools and services, and each of them will likely use one or several ports. Here is a documentation to help understand what each port does, and help in case of a port conflict.",source:"@site/docs/development/common-ports.mdx",sourceDirName:"development",slug:"/common-ports/",permalink:"/common-ports/",draft:!1,unlisted:!1,editUrl:"https://github.com/jhipster/jhipster.github.io/tree/main/docs/development/common-ports.mdx",tags:[],version:"current",lastUpdatedAt:16152048e5,frontMatter:{title:"Common ports",slug:"/common-ports/",last_update:{date:"2021-03-08T12:00:00.000Z"}},sidebar:"docsSidebar",previous:{title:"Common application properties",permalink:"/common-application-properties/"},next:{title:"Separating front-end and API",permalink:"/separating-front-end-and-api/"}},l={},o=[];function h(e){const t={a:"a",code:"code",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"JHipster configures many tools and services, and each of them will likely use one or several ports. Here is a documentation to help understand what each port does, and help in case of a port conflict."}),"\n",(0,s.jsxs)(t.p,{children:["Please note that as per the JHipster ",(0,s.jsx)(t.a,{href:"/policies",children:"Policy 1"}),", the standard port for each technology is used, unless that causes a problem (that should be explained here)."]}),"\n",(0,s.jsxs)(t.p,{children:["The ports here are listed in order, but the most common questions are for ports ",(0,s.jsx)(t.code,{children:"8080"}),", ",(0,s.jsx)(t.code,{children:"9000"})," and ",(0,s.jsx)(t.code,{children:"9060"}),"."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Port"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"2181"}),(0,s.jsx)(t.td,{children:"Zookeeper (used with Kafka)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"3000"}),(0,s.jsx)(t.td,{children:"Grafana"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"3306"}),(0,s.jsx)(t.td,{children:"MySQL and MariaDB"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"5000"}),(0,s.jsx)(t.td,{children:"Logstash"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"5432"}),(0,s.jsx)(t.td,{children:"PostgreSQL"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"5701"}),(0,s.jsx)(t.td,{children:"Hazelcast"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"6650"}),(0,s.jsx)(t.td,{children:"Pulsar - Service port"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7742"}),(0,s.jsx)(t.td,{children:"Swagger Editor"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"8080"}),(0,s.jsx)(t.td,{children:"JHipster application back-end development port (Spring Boot server)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"8081"}),(0,s.jsx)(t.td,{children:"JHipster microservice default port"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"8091"}),(0,s.jsx)(t.td,{children:"Couchbase - Web administration port"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"8092"}),(0,s.jsx)(t.td,{children:"Couchbase - API port"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"8093"}),(0,s.jsx)(t.td,{children:"Couchbase - used by query services for REST/HTTP traffic"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"8180"}),(0,s.jsx)(t.td,{children:"Hazelcast management center"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"8300"}),(0,s.jsx)(t.td,{children:"Consul - server"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"8301"}),(0,s.jsx)(t.td,{children:"Consul - serflan-tcp and serflan-udp"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"8302"}),(0,s.jsx)(t.td,{children:"Consul - serfwan-tcp and serfwan-udp"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"8400"}),(0,s.jsx)(t.td,{children:"Consul - RPC"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"8500"}),(0,s.jsx)(t.td,{children:"Consul - HTTP port with the Web UI"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"8600"}),(0,s.jsx)(t.td,{children:"Consul - DNS"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"8761"}),(0,s.jsx)(t.td,{children:"JHipster Registry (Netflix Eureka)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"9000"}),(0,s.jsx)(t.td,{children:"JHipster front-end development port with BrowserSync"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"9001"}),(0,s.jsx)(t.td,{children:"SonarQube"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"9042"}),(0,s.jsx)(t.td,{children:"Cassandra - CQL"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"9060"}),(0,s.jsx)(t.td,{children:"JHipster front-end development port with Webpack hot-reload"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"9090"}),(0,s.jsx)(t.td,{children:"Prometheus"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"9092"}),(0,s.jsx)(t.td,{children:"Kafka"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"9093"}),(0,s.jsx)(t.td,{children:"Prometheus alert manager"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"9160"}),(0,s.jsx)(t.td,{children:"Cassandra - Thrift"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"9200"}),(0,s.jsx)(t.td,{children:"Elasticsearch - HTTP connections (REST API)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"9300"}),(0,s.jsx)(t.td,{children:"Elasticsearch - transport connections (native API)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"9411"}),(0,s.jsx)(t.td,{children:"Zipkin"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"11210"}),(0,s.jsx)(t.td,{children:"Couchbase - Internal/external bucket port"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"18080"}),(0,s.jsx)(t.td,{children:'H2 (embedded database) running inside a monolith. Default port is normally 9092 but this would cause a conflict with Kafka, so it is fixed as "1" + "Spring Boot port"'})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"18081"}),(0,s.jsx)(t.td,{children:"H2 (embedded database) running inside a microservice. See line above for more information"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"27017"}),(0,s.jsx)(t.td,{children:"MongoDB"})]})]})]})]})}function a(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>c});var s=r(96540);const n={},d=s.createContext(n);function i(e){const t=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(d.Provider,{value:t},e.children)}}}]);