"use strict";(self.webpackChunkjhipster_website=self.webpackChunkjhipster_website||[]).push([[5659],{77817:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var i=t(74848),s=t(28453);const o={title:"Improve developer experience if opening only front end in the IDE",slug:"/tips/029_tip_frontend_only.html",last_update:{date:new Date("2019-10-14T12:35:00.000Z")}},r=void 0,l={id:"tips/tip_frontend_only",title:"Improve developer experience if opening only front end in the IDE",description:"Tip submitted by @kaidohallik",source:"@site/docs/tips/029_tip_frontend_only.mdx",sourceDirName:"tips",slug:"/tips/029_tip_frontend_only.html",permalink:"/tips/029_tip_frontend_only.html",draft:!1,unlisted:!1,editUrl:"https://github.com/jhipster/jhipster.github.io/tree/main/docs/tips/029_tip_frontend_only.mdx",tags:[],version:"current",lastUpdatedAt:15710565e5,sidebarPosition:29,frontMatter:{title:"Improve developer experience if opening only front end in the IDE",slug:"/tips/029_tip_frontend_only.html",last_update:{date:"2019-10-14T12:35:00.000Z"}},sidebar:"docsSidebar",previous:{title:"Provide Internet Explorer support",permalink:"/tips/028_tip_ie_support.html"},next:{title:"Configure Redis leader follower(master-slave) replication",permalink:"/tips/030_tip_redis_replication.html"}},d={},a=[{value:"Possible solution 1",id:"possible-solution-1",level:2},{value:"Possible solution 2",id:"possible-solution-2",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Tip submitted by ",(0,i.jsx)(n.a,{href:"https://github.com/kaidohallik",children:"@kaidohallik"})]})}),"\n",(0,i.jsx)(n.p,{children:"The following behaviour occurs at least in Visual Studio Code."}),"\n",(0,i.jsxs)(n.p,{children:["If generating a full stack app (not skipping server nor client) and front end developer wants to see as few files as possible and opens only folder ",(0,i.jsx)(n.code,{children:"src/main/webapp/app"})," in the IDE then IDE doesn't recognize imports starting with ",(0,i.jsx)(n.code,{children:"app"}),". These imports are red and developer can't see these imported classes content and can't jump with one click into these imported classes. Path ",(0,i.jsx)(n.code,{children:"app"})," is defined in the ",(0,i.jsx)(n.code,{children:"tsconfig.json"})," file which is located in the root folder of the generated app and therefore this information is missing if opening some subfolder."]}),"\n",(0,i.jsx)(n.h2,{id:"possible-solution-1",children:"Possible solution 1"}),"\n",(0,i.jsxs)(n.p,{children:["Add file ",(0,i.jsx)(n.code,{children:"src/main/webapp/app/tsconfig.json"})," with the following content:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "extends": "../../../../tsconfig.json"\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["And for tests add file ",(0,i.jsx)(n.code,{children:"src/test/javascript/spec/tsconfig.json"})," with the same content:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "extends": "../../../../tsconfig.json"\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["After that Visual Studio Code resolves path ",(0,i.jsx)(n.code,{children:"app"})," if opening only folder ",(0,i.jsx)(n.code,{children:"src/main/webapp/app"})," or ",(0,i.jsx)(n.code,{children:"src/test/javascript/spec"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"possible-solution-2",children:"Possible solution 2"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["add node script ",(0,i.jsx)(n.code,{children:"remove-import-alias.js"})," to app root folder which replaces import aliases with relative paths:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const fs = require('fs');\n\nremoveImportAlias = function(dir, level, additionalPath) {\n  fs.readdirSync(dir).forEach(function(file) {\n    if (fs.statSync(dir + file).isDirectory()) {\n      removeImportAlias(dir + file + '/', level + 1, additionalPath);\n    } else if (file.endsWith('.ts')) {\n      fs.readFile(dir + file, 'utf8', function (err, content) {\n        if (err) {\n          console.log(err);\n        } else {\n          let path = '../'.repeat(level);\n          if (additionalPath) {\n            path += additionalPath;\n          }\n          if (!path) {\n            path = './';\n          }\n          const newContent = content.replace(/import \\{ (.*) \\} from 'app\\/(.*)';/g, `import { $1 } from '${path}$2';`);\n          fs.writeFile(dir + file, newContent, 'utf8', function (err) {\n            if (err) {\n              console.log(err);\n            }\n          });\n        }\n      });\n    }\n  });\n};\n\nremoveImportAlias(`./src/main/webapp/app/`, 0);\nremoveImportAlias(`./src/test/javascript/spec/`, 0, '../../../main/webapp/app/');\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["add ",(0,i.jsx)(n.code,{children:"remove-import-alias.js"})," to ",(0,i.jsx)(n.code,{children:".eslintignore"})]}),"\n",(0,i.jsxs)(n.li,{children:["run added script: ",(0,i.jsx)(n.code,{children:"node remove-import-alias.js"})]}),"\n",(0,i.jsxs)(n.li,{children:["delete ",(0,i.jsx)(n.code,{children:"app/*"})," from the file ",(0,i.jsx)(n.code,{children:"tsconfig.json"})," from the section ",(0,i.jsx)(n.code,{children:"compilerOptions.paths"})]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(96540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);